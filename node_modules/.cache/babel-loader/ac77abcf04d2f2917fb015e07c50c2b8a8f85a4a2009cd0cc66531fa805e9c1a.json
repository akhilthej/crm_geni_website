{"ast":null,"code":"var _jsxFileName = \"/Users/akhilthejreddy/Desktop/github/crm_geni_website/crm_geni_website/src/routes/LogoLoader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport applogo from \"../assets/CSDLogo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogoLoader = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Simulate a loading delay (replace this with your actual data loading logic)\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000); // Adjust the delay as needed\n\n    // Clear the timer when the component unmounts or when isLoading becomes false\n    return () => clearTimeout(timer);\n  }, []); // Empty dependency array to ensure the effect runs only once\n\n  const logoLoaderStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'black',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 100,\n    transition: 'opacity 0.5s'\n  };\n  const logoStyle = {\n    maxWidth: '20%',\n    /* Make the logo width 100% of its container */\n    maxHeight: '20%' /* Make the logo height 100% of its container */\n  };\n\n  // Ensure the loader is hidden when isLoading becomes false\n  if (!isLoading) {\n    return null; // Return null to render nothing when not loading\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: logoLoaderStyle,\n    className: `logo-loader ${isLoading ? 'show' : 'hide'}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: applogo,\n      alt: \"Loading\",\n      style: logoStyle,\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LogoLoader, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = LogoLoader;\nexport default LogoLoader;\nvar _c;\n$RefreshReg$(_c, \"LogoLoader\");","map":{"version":3,"names":["React","useState","useEffect","applogo","jsxDEV","_jsxDEV","LogoLoader","_s","isLoading","setIsLoading","timer","setTimeout","clearTimeout","logoLoaderStyle","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","transition","logoStyle","maxWidth","maxHeight","style","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akhilthejreddy/Desktop/github/crm_geni_website/crm_geni_website/src/routes/LogoLoader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport applogo from \"../assets/CSDLogo.svg\"\n\nconst LogoLoader = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate a loading delay (replace this with your actual data loading logic)\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000); // Adjust the delay as needed\n\n    // Clear the timer when the component unmounts or when isLoading becomes false\n    return () => clearTimeout(timer);\n  }, []); // Empty dependency array to ensure the effect runs only once\n\n  const logoLoaderStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'black',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 100,\n    transition: 'opacity 0.5s',\n  };\n\n  const logoStyle = {\n    maxWidth: '20%', /* Make the logo width 100% of its container */\n    maxHeight: '20%', /* Make the logo height 100% of its container */\n  };\n\n  // Ensure the loader is hidden when isLoading becomes false\n  if (!isLoading) {\n    return null; // Return null to render nothing when not loading\n  }\n\n  return (\n    <div style={logoLoaderStyle} className={`logo-loader ${isLoading ? 'show' : 'hide'}`}>\n      <img src={applogo} alt=\"Loading\" style={logoStyle} className=\"logo\" />\n    </div>\n  );\n};\n\nexport default LogoLoader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMG,eAAe,GAAG;IACtBC,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBC,QAAQ,EAAE,KAAK;IAAE;IACjBC,SAAS,EAAE,KAAK,CAAE;EACpB,CAAC;;EAED;EACA,IAAI,CAACnB,SAAS,EAAE;IACd,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEH,OAAA;IAAKuB,KAAK,EAAEf,eAAgB;IAACgB,SAAS,EAAG,eAAcrB,SAAS,GAAG,MAAM,GAAG,MAAO,EAAE;IAAAsB,QAAA,eACnFzB,OAAA;MAAK0B,GAAG,EAAE5B,OAAQ;MAAC6B,GAAG,EAAC,SAAS;MAACJ,KAAK,EAAEH,SAAU;MAACI,SAAS,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA1CID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}